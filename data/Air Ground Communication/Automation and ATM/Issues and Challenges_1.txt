While automation in ATM is generally a positive trend, there are some issues that arise in the process and some challenges need to be overcome so that the effort and resources are not wasted. Reliability levels - the more complex a piece of software is, the more effort is necessary to put in developing it so that it meets the reliability that is expected in ATM. For example, an MTCD that generates too many false alarms or fails to detect potential conflicts early enough is likely to be ignored by the controllers.. Malfunction/fallback - in case of automation malfunction, there is usually a fallback solution. For instance, in case of OLDI failure telephones are used to exchange current flight plan data (estimates and revisions). This, however, increases the workload and, in case a particular failure happens relatively rarely (e.g. a total flight data processing system failure resulting in the use of paper strips), it is possible that controller skills to cope with the non-standard situation are "rusty" at best or even non-existant.. Increased human-computer interaction. While automation does reduce some types of controller workload (e.g. phone coordination, exchange of flight data, etc.), it also requires the controllers to make more inputs in the system (e.g. trajectory revisions, cleared and planned levels, etc.). The increased number of inputs leads to increased controller workload and this can at times render some features useless. For instance, if most aircraft are avoiding weather, the controller might not be able to timely update the flight paths. Therefore the MTCD is likely to generate a lot of false alarms while at the same time fail to spot the actual conflict situations. Another example of increased worload is when the controller needs to investigate false alarms created by the automated functions.. Interconnection and mutual dependency - in order to deliver optimal performance, the various automated features need to operate together and rely on each other's information. Consequently, a failure in one module may lead to a "domino-effect" where other automated features become less effective. For instance, if a radar track is split into two tracks, this will most likely trigger the STCA. If, due to e.g. some problem with the surveillance system, this happens to most (or all) aircraft within the sector, the controller will be presented with multiple false STCAs and will effectively lose the layer of protection provided by the feature.. User-friendliness of software is sometimes less-than-ideal. It is possible (and sometimes this happens) that a new function is implemented in such a way that controllers restrain from using it just because it requires too much effort or its use impairs other functions.. Malicious interference - an increased level of automation generally means that extra care should be taken in order to prevent unauthorised intervention. While in general the ATM system is separated from the outside world, the introduction of automation in the communication and decision making needs to be carefully shielded from unwanted external interference.. Feasibility - resources are always limited and need to